name: Build Application image

on:
  push:
    branches:
      - dev
      - main

jobs:
  tests: 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout git files
        uses: actions/checkout@v3
        
      - name: Run docker-compose
        uses: hoverkraft-tech/compose-action@v2.0.1
        with:
          up-flags: "-d"
          compose-file: "./docker/docker-compose-test.yml"

      - name: Use Node.js Version 20.X
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: "true"

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint

      - name: Run tests
        run: npm run test:ci
        env:
          WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET }}
          CLERK_JWT_SECRET_KEY: ${{ secrets.CLERK_JWT_SECRET_KEY}}
          SECRET_KEY_SESSION: ${{secrets.SECRET_KEY_SESSION}}
          MONGO_URI: ${{secrets.MONGO_URI}}
          DATABASE_URL: ${{secrets.DATABASE_URL}}
          DATABASE_TEST_URL: ${{secrets.DATABASE_TEST_URL}}
          PORT: 3000


  build:
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
    - name: Checkout git files
      uses: actions/checkout@v3
      
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - uses: benjlevesque/short-sha@v3.0
      id: short-sha
      with:
        length: 7


    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push 
      uses: docker/build-push-action@v6  
      with:
          context: .
          platforms: linux/amd64,linux/arm64  
          push: true
          tags: ${{secrets.DOCKERHUB_USERNAME}}/temvagamestreapi:${{steps.short-sha.outputs.sha}},${{secrets.DOCKERHUB_USERNAME}}/temvagamestreapi:latest
