{
  "name": "temvagamestre.server",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "start": "nest start",
    "dev": "npm run services:up && npm run start:dev && npm run services:stop",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main.js",
    "test": "jest --passWithNoTests --silent --noStackTrace --runInBand",
    "test:coverage": "jest --coverage --silent --noStackTrace --runInBand",
    "test:unit": "npm test -- --watch -c jest-unit-config.js",
    "test:integration": "npm test -- --watch -c jest-integration-config.js",
    "test:verbose": "jest --passWithNoTests --runInBand",
    "test:verbose-unit": "jest --passWithNoTests --runInBand --watch -c jest-unit-config.js",
    "test:verbose-integration": "jest --passWithNoTests --runInBand --watch -c jest-integration-config.js",
    "test:ci": "npm test -- --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "prepare": "husky install || true",
    "prisma:generate-client-definition": "npx prisma generate",
    "prisma:apply-migration": "npx prisma migrate deploy",
    "seed:addSocialMedia": "ts-node -r tsconfig-paths/register src/infra/seeds/social-media/add-social-media-seed.ts",
    "seed:addRpgStyle": "ts-node -r tsconfig-paths/register src/infra/seeds/rpg-style/add-rpg-style-seed.ts",
    "seed:addPlayerProfile": "ts-node -r tsconfig-paths/register src/infra/seeds/player-profile/add-player-profile-seed.ts",
    "lint": "eslint **/*.ts",
    "pre-run:apply-seeds": "ts-node -r tsconfig-paths/register src/infra/seeds/seed.ts",
    "pre-run:prepare-database": "npm run prisma:generate-client-definition && npm run prisma:apply-migration && npm run pre-run:apply-seeds",
    "docker:compose": "docker compose -f docker/docker-compose.dev.yaml",
    "services:migrations": "npm run pre-run:prepare-database",
    "services:up": "npm run docker:compose -- up -d && npm run services:migrations",
    "services:stop": "npm run docker:compose -- stop",
    "services:down": "npm run docker:compose -- down"
  },
  "dependencies": {
    "@clerk/clerk-sdk-node": "^4.13.1",
    "@nestjs/axios": "^3.0.3",
    "@nestjs/common": "^10.0.0",
    "@nestjs/core": "^10.0.0",
    "@nestjs/mongoose": "^10.0.10",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/swagger": "^7.2.0",
    "@prisma/client": "^5.7.1",
    "axios": "^1.7.7",
    "bad-words": "^3.0.4",
    "bcrypt": "^5.1.1",
    "dotenv": "^16.3.1",
    "express-session": "^1.18.0",
    "jsonwebtoken": "^9.0.2",
    "mongoose": "^8.7.1",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.8.1",
    "svix": "^1.15.0",
    "uuid": "^9.0.1",
    "zod": "^3.22.4",
    "zod-validation-error": "^2.1.0"
  },
  "devDependencies": {
    "@commitlint/cli": "^18.4.3",
    "@commitlint/config-conventional": "^18.4.3",
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@shelf/jest-mongodb": "^4.2.0",
    "@swc/core": "^1.4.6",
    "@swc/jest": "^0.2.36",
    "@types/bad-words": "^3.0.3",
    "@types/express": "^4.17.17",
    "@types/express-session": "^1.18.0",
    "@types/jest": "^29.5.2",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/node": "^20.3.1",
    "@types/pg": "^8.10.9",
    "@types/supertest": "^2.0.12",
    "@types/uuid": "^9.0.7",
    "@typescript-eslint/eslint-plugin": "^6.4.0",
    "eslint": "^8.0.1",
    "eslint-config-standard-with-typescript": "^40.0.0",
    "eslint-plugin-import": "^2.25.2",
    "eslint-plugin-n": "^15.0.0",
    "eslint-plugin-promise": "^6.0.0",
    "husky": "^8.0.3",
    "jest": "^29.5.0",
    "lint-staged": "^15.2.0",
    "mockdate": "^3.0.5",
    "pg": "^8.11.3",
    "prismock": "^1.24.0",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "*"
  },
  "prisma": {
    "schema": "./src/infra/database/prisma/schema/schema.prisma"
  },
  "_moduleAliases": {
    "@": "src"
  }
}